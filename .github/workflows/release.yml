name: Release

on:
  push:
    tags:
      - '*.*.*'
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to central
    steps:
      - uses: actions/checkout@v2
      - name: Set release version environment variable
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up build
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.CHUTNEY_GPG_PRIVATE_KEY }}
          gpg-passphrase: CHUTNEY_GPG_PASSPHRASE

      - name: Build with Maven
        env:
          BUILD_ENV: 'github-actions'
        run: mvn -B -V clean verify

      - name: Temporarily save server artifacts
        uses: actions/upload-artifact@v2
        with:
          name: server-artifacts
          path: |
            packaging/local-dev/target/chutney-local-dev-*.jar
          retention-days: 1
      - name: Temporarily save ui artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ui-artifacts
          path: |
            ui/dist
          retention-days: 1
      - name: Publish to central
        run: mvn -DskipTests -Drelease=true deploy
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          CHUTNEY_GPG_PASSPHRASE: ${{ secrets.CHUTNEY_GPG_PASSPHRASE }}

      - name: Create github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: 'TODO'
          draft: false
          prerelease: false

      - name: Upload fatjar to github release
        id: upload-release-asset-fatjar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/packaging/local-dev/target/chutney-local-dev-${{ env.RELEASE_VERSION }}.jar
          asset_name: chutney-local-dev-${{ env.RELEASE_VERSION }}.jar
          asset_content_type: application/jar

      - name: Upload signature to github release
        id: upload-release-asset-fatjar-sig
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/packaging/local-dev/target/chutney-local-dev-${{ env.RELEASE_VERSION }}.jar.asc
          asset_name: chutney-local-dev-${{ env.RELEASE_VERSION }}.jar.asc
          asset_content_type: application/pgp-signature
    outputs:
      RELEASE_VERSION: ${{ env.RELEASE_VERSION }}

  docker-deploy-server:
    runs-on: ubuntu-latest
    needs: [ deploy ]
    name: Deploy server to docker registry
    steps:
      - uses: actions/checkout@v2
      - name: Download server artifacts
        uses: actions/download-artifact@v2
        with:
          name: server-artifacts
          path: artifacts/server
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push server docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ github.workspace }}
          file: ${{ github.workspace }}/.docker/server/Dockerfile
          tags: |
            ghcr.io/chutney-testing/chutney/server:latest
            ghcr.io/chutney-testing/chutney/server:${{ needs.deploy.outputs.RELEASE_VERSION }}
          push: true
          build-args: |
            JAR_PATH=artifacts/server

  docker-deploy-ui:
    runs-on: ubuntu-latest
    needs: [ deploy ]
    name: Deploy ui to docker registry
    steps:
      - uses: actions/checkout@v2
      - name: Download ui artifacts
        uses: actions/download-artifact@v2
        with:
          name: ui-artifacts
          path: artifacts/ui
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ui docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ github.workspace }}
          file: ${{ github.workspace }}/.docker/ui/Dockerfile
          tags: |
            ghcr.io/chutney-testing/chutney/ui:latest
            ghcr.io/chutney-testing/chutney/ui:${{ needs.deploy.outputs.RELEASE_VERSION }}
          push: true
          build-args: |
            WEBSITE=artifacts/ui

