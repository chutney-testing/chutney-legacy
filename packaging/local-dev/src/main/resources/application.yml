agent-name: chutney-server-agent-0
server:
  port: 8443
  http:
    port: 9350
    interface: localhost
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  ssl:
    keyStore: 'classpath:security/https/server.jks'
    key-store-password: 'server'
    key-password: 'server'
    trust-store: 'classpath:security/https/truststore.jks'
    trust-store-password: 'truststore'
  servlet:
    session:
      timeout: 240m
      cookie:
        http-only: true
        secure: true
      tracking-modes: cookie

management:
  endpoints:
    web:
      exposure:
        include: "*"
      cors:
        allowed-origins: '*'
        allowed-methods: GET
  endpoint:
    health:
      show-details: always

spring:
  liquibase:
    change-log: classpath:/changelog/db.changelog-master.xml
  profiles:
    active:
      - undertow-https-redirect
      - users
      - mem-auth
      - dev-auth
      - db-h2

chutney:
  configuration-folder: .chutney/conf
  environment:
    configuration-folder: ${chutney.configuration-folder}
#  db-server: (cf. application-db-[h2|pg].yml configuration files)
#    port: 9360
#    base-dir: ./.chutney
  orient:
    path: .chutney/data/orient
#    dBProperties:
#      dbName: chutney_component_db
#      dbType: PLOCAL
    contextConfiguration:
      "[storage.diskCache.diskFreeSpaceLimit]": 384
      "[storage.diskCache.bufferSize]": 1024
  execution:
    async:
      publisher:
        ttl: 5
        debounce: 250
  engine:
    reporter:
      publisher:
        ttl: 5
#    delegation:
#      user:
#      password:
  examples:
    active: false
  campaigns:
    thread: 20
  scenarios:
    thread: 20
  editions:
    ttl:
      value: 2
      unit: SECONDS
  tasks:
    sql:
      nbLoggedRow: 30
#  localAgent:
#    defaultName:
#    defaultHostName:
  agentnetwork:
    connection-checker-timeout: 1000

graphql:
  tools:
    introspection-enabled: false
  servlet:
    # Sets if GraphQL servlet should be created and exposed. If not specified defaults to "true".
    enabled: true
    # Sets the path where GraphQL servlet will be exposed. If not specified defaults to "/graphql"
    mapping: /graphql
  schema-strategy: annotations
  annotations:
    base-package: com.chutneytesting # required
  playground:
    mapping: /playground
    endpoint: ${graphql.servlet.mapping}
    subscriptionEndpoint: /subscriptions
    enabled: true
    pageTitle: Chutney Playground
    headers:
      headerFor: AllTabs
    settings:
      request:
        credentials: include

